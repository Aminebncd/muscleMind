version: "3.9"

services:
  php:
    build:
      context: .
      target: runtime
    env_file: .env.docker
    environment:
      APP_ENV: dev
      APP_DEBUG: 1
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      PHP_OPCACHE_REVALIDATE_FREQ: 0
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "SCRIPT_NAME=/fpm-ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  nginx:
    image: nginx:alpine
    depends_on:
      php:
        condition: service_healthy
    ports:
      - "${APP_PORT:-8080}:80"
    volumes:
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/app:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O - http://127.0.0.1/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 20s

  db:
    image: mysql:8
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"]
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog
    profiles: ["mail"]
    ports:
      - "8025:8025"

  node:
    image: node:20-alpine
    profiles: ["node"]
    working_dir: /app
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "5173"]
    ports:
      - "5173:5173"
    volumes:
      - .:/app

volumes:
  db_data:
  redis_data:
